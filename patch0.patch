diff --git a/src/main/java/org/sample/controller/IndexController.java b/src/main/java/org/sample/controller/IndexController.java
index b31ef38..13e17ae 100644
--- a/src/main/java/org/sample/controller/IndexController.java
+++ b/src/main/java/org/sample/controller/IndexController.java
@@ -15,7 +15,6 @@ import org.sample.controller.pojos.TeamCreationForm;
 import org.sample.controller.service.SampleService;
 import org.sample.model.Apartment;
 import org.sample.model.RealEstate;
-import org.sample.model.ShApartment;
 import org.sample.model.User;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.propertyeditors.CustomDateEditor;
@@ -93,7 +92,7 @@ public class IndexController {
     	return model;
     }
 
-    @RequestMapping(value="/newAd", method = RequestMethod.GET) //mg
+    @RequestMapping(value="/make-ad", method = RequestMethod.GET)
     public ModelAndView makeAd(){
     	ModelAndView model = new ModelAndView("newAd");
     	model.addObject("apForm", new ApartmentForm());
@@ -101,16 +100,7 @@ public class IndexController {
     	return model;
     }
     
-    /*    @RequestMapping(value = "/new-ad", method = RequestMethod.GET)
-    public ModelAndView newAd(){
-    	ModelAndView model = new ModelAndView("newAd");
-    	
-    	model.addObject("apartmentForm", new ApartmentForm());
-    	
-    	return model;
-    }*/
-    
-/*    @RequestMapping(value="/make-ad", method = RequestMethod.POST)
+    @RequestMapping(value="/make-ad", method = RequestMethod.POST)
     public ModelAndView saveAd( ApartmentForm form, ShApartmentForm form2, BindingResult result){
     	System.out.println(form.getCategory());
     	if(form.getCategory().equals("Apartment")){
@@ -123,63 +113,27 @@ public class IndexController {
     	}
     	ModelAndView model= new ModelAndView("show");
     	return model;
-    }*/
-    
+    }
     
-    @RequestMapping(value="/makeAd", method = RequestMethod.POST)
-    public ModelAndView makeAd(ApartmentForm form, ShApartmentForm form2, BindingResult result){
-    	System.out.println(form.getCategory());
-    	ModelAndView model = null;
-    	if(form.getCategory().equals("Apartment")){
-    		System.out.println("apartment cat");    	
-        	if (!result.hasErrors()) {
-                try {
-                	Apartment apartment=sampleService.saveFrom(form);
-                	model = new ModelAndView("viewAd");
-                    model.addObject("message","This is what your ad will look like:");
-                    model.addObject("category","Apartment");
-                    //apartment.setDescription(apartment.getDescription().replace("\n", "<br />\n"));
-                    model.addObject("ad", apartment);
-                } catch (InvalidDateException e) {
-                	model = new ModelAndView("newAd");
-                	model.addObject("page_error", e.getMessage());
-                }
-            } else {
-            	model = new ModelAndView("newAd");
-            }   	
-    	}
-    	if(form2.getCategory().equals("Shared Apartment")){
-    		System.out.println("shared apartment cat");
-        	if (!result.hasErrors()) {
-                try {
-                	ShApartment apartment=sampleService.saveFrom(form2);
-                	System.out.println("yes");
-                	model = new ModelAndView("viewAd");
-                    model.addObject("message","This is what your ad will look like:");
-                    model.addObject("category","Shared Apartment");
-                    //form2.setDescription(form2.getDescription().replace("\n", "<br />\n"));
-                    model.addObject("ad", apartment);
-                } catch (InvalidDateException e) {
-                	System.out.print("catch");
-                	model = new ModelAndView("main");
-                	model.addObject("page_error", e.getMessage());
-                }
-            } else {
-            	System.out.println("else");
-            	model = new ModelAndView("main");
-            }
-    		
-    	}
-    	return model;
+    @RequestMapping(value = "/new-ad", method = RequestMethod.GET)
+    public ModelAndView newAd(){
+    	ModelAndView model = new ModelAndView("newAd");
     	
-/*    	ModelAndView model;    	
+    	model.addObject("apartmentForm", new ApartmentForm());
+    	
+    	return model;
+    }
+    
+    /*@RequestMapping(value="/makeAd", method = RequestMethod.POST)
+    public ModelAndView makeAd(@Valid ApartmentForm apartmentForm, BindingResult result){
+    	ModelAndView model;    	
     	if (!result.hasErrors()) {
             try {
-            	sampleService.saveFrom(form);
+            	sampleService.saveFrom(apartmentForm);
             	model = new ModelAndView("viewAd");
                 model.addObject("message","This is what your ad will look like:");
-                form.setDescription(form.getDescription().replace("\n", "<br />\n"));
-                model.addObject("apartmentForm", form);
+                apartmentForm.setDescription(apartmentForm.getDescription().replace("\n", "<br />\n"));
+                model.addObject("apartmentForm", apartmentForm);
             } catch (InvalidDateException e) {
             	model = new ModelAndView("newAd");
             	model.addObject("page_error", e.getMessage());
@@ -187,10 +141,10 @@ public class IndexController {
         } else {
         	model = new ModelAndView("newAd");
         }   	
-    	return model;*/
-    }
+    	return model;
+    }*/
     
-/*    @RequestMapping(value = "/new-shad", method = RequestMethod.GET)
+    @RequestMapping(value = "/new-shad", method = RequestMethod.GET)
     public ModelAndView newAdShAd(){
     	ModelAndView model = new ModelAndView("newAdShAp");
     	
@@ -217,21 +171,19 @@ public class IndexController {
         	model = new ModelAndView("newAdShAp");
         }   	
     	return model;
-    }*/
+    }
     
     @RequestMapping(value="/editAd", method = RequestMethod.POST)
     public ModelAndView editAd(ApartmentForm apartmentForm, BindingResult result){
     	ModelAndView model;    	
     	if (!result.hasErrors()) {
             model = new ModelAndView("newAd");
-            
-            Apartment oldAd = sampleService.getAd(apartmentForm.getId());
+            RealEstate oldAd = sampleService.getAd(apartmentForm.getId());
             apartmentForm.setDescription(oldAd.getDescription());
             apartmentForm.setFixedMoveIn(oldAd.isFixedMoveIn());
             apartmentForm.setFixedMoveOut(oldAd.isFixedMoveOut());
             model.addObject("oldAd", oldAd);
-            model.addObject("apForm", apartmentForm); //mg
-            model.addObject("shApForm", new ShApartmentForm()); //mg
+            model.addObject("apartmentForm", apartmentForm);
         } 
     	else {
         	model = new ModelAndView("index");
diff --git a/src/main/java/org/sample/controller/pojos/ApartmentForm.java b/src/main/java/org/sample/controller/pojos/ApartmentForm.java
index 08ec70c..2d393b5 100644
--- a/src/main/java/org/sample/controller/pojos/ApartmentForm.java
+++ b/src/main/java/org/sample/controller/pojos/ApartmentForm.java
@@ -7,7 +7,7 @@ import javax.validation.constraints.*;
 
 public class ApartmentForm extends RealEstateForm{
 	
-	//@Min(value=1, message="Please enter the number of rooms larger than 0.")
+	@Min(value=1, message="Please enter the number of rooms larger than 0.")
 	private int numberOfRooms;
 	private int size;
 	
diff --git a/src/main/java/org/sample/controller/service/SampleService.java b/src/main/java/org/sample/controller/service/SampleService.java
index 56e4c74..7d61337 100644
--- a/src/main/java/org/sample/controller/service/SampleService.java
+++ b/src/main/java/org/sample/controller/service/SampleService.java
@@ -10,7 +10,6 @@ import org.sample.controller.pojos.SignupForm;
 import org.sample.controller.pojos.TeamCreationForm;
 import org.sample.model.Apartment;
 import org.sample.model.RealEstate;
-import org.sample.model.ShApartment;
 import org.sample.model.Team;
 import org.sample.model.User;
 
@@ -24,15 +23,14 @@ public interface SampleService {
 
     public Iterable<Team> getAllTeams();
 
-	public Apartment saveFrom(ApartmentForm adForm);
-	public ShApartment saveFrom(ShApartmentForm form2);
+	public ApartmentForm saveFrom(ApartmentForm adForm);
 
-	public Apartment getAd(long id); //mg
-	//public ShApartmentForm getAd(long id);
+	public RealEstate getAd(long id);
 
 	public Iterable<Apartment> getSearchResults(SearchForm searchForm);
 	
 	public List<String> getCategories();
 
+	public ShApartmentForm saveFrom(ShApartmentForm form2);
 
 }
diff --git a/src/main/java/org/sample/controller/service/SampleServiceImpl.java b/src/main/java/org/sample/controller/service/SampleServiceImpl.java
index 8aeb22c..77bb412 100644
--- a/src/main/java/org/sample/controller/service/SampleServiceImpl.java
+++ b/src/main/java/org/sample/controller/service/SampleServiceImpl.java
@@ -20,6 +20,7 @@ import org.sample.model.dao.ShApartmentDao;
 import org.sample.model.dao.TeamDao;
 import org.sample.model.dao.UserDao;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.repository.CrudRepository;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.StringUtils;
@@ -103,7 +104,7 @@ public class SampleServiceImpl implements SampleService {
     }
 
     @Transactional
-	public Apartment saveFrom(ApartmentForm apartmentForm)throws InvalidDateException {
+	public ApartmentForm saveFrom(ApartmentForm apartmentForm)throws InvalidDateException {
 		
     	checkDates(apartmentForm);
     	
@@ -117,21 +118,22 @@ public class SampleServiceImpl implements SampleService {
     		apartment = new Apartment();
     	}
     	
-    	apartment=(Apartment) setRealEstateFields(apartmentForm, apartment);
+    	apartment=(Apartment) setCommonFields(apartmentForm, apartment);
     	apartment.setNumberOfRooms(apartmentForm.getNumberOfRooms());
     	apartment.setSize(apartmentForm.getSize());
     	
     	
+    	
     	apartment = apDao.save(apartment);
     	
     	apartmentForm.setId(apartment.getId());
-    	return apartment;
+    	return apartmentForm;
 		
 		
 	}
     
     @Transactional
-    public ShApartment saveFrom(ShApartmentForm form) {
+    public ShApartmentForm saveFrom(ShApartmentForm form) {
     	checkDates(form);
     	ShApartment apartment;
 		
@@ -143,7 +145,7 @@ public class SampleServiceImpl implements SampleService {
     		apartment = new ShApartment();
     	}
     	
-    	apartment=(ShApartment) setRealEstateFields(form, apartment);
+    	apartment=(ShApartment) setCommonFields(form, apartment);
     	apartment.setRoomSize(form.getRoomSize());
     	
     	
@@ -151,12 +153,11 @@ public class SampleServiceImpl implements SampleService {
     	apartment = shApDao.save(apartment);
     	System.out.println(apartment.getId());
     	form.setId(apartment.getId());
-    	return apartment;
+    	return form;
 		
 	}
 
-	private RealEstate setRealEstateFields(RealEstateForm form, RealEstate ad) {
-		
+	private RealEstate setCommonFields(RealEstateForm form, RealEstate ad) {
 		Address address;
 		
 		address=new Address();
@@ -165,8 +166,10 @@ public class SampleServiceImpl implements SampleService {
     	address.setCity(form.getCity());
     	address.setZipCode(form.getZipCode());	
     	
-    	ad.setTitle(form.getTitle());
     	ad.setAddress(address);
+    	ad.setTitle(form.getTitle());
+    	ad.setDescription(form.getDescription());
+    	ad.setPrice(form.getPrice());
     	ad.setFixedMoveIn(form.isFixedMoveIn());
     	if(ad.isFixedMoveIn()){
     		ad.setMoveIn(form.getMoveIn());
@@ -175,8 +178,6 @@ public class SampleServiceImpl implements SampleService {
     	if(ad.isFixedMoveOut()){
     		ad.setMoveOut(form.getMoveOut());
     	}
-    	ad.setPrice(form.getPrice());
-    	ad.setDescription(form.getDescription());
     	return ad;
 	}
 
diff --git a/src/main/java/org/sample/model/RealEstate.java b/src/main/java/org/sample/model/RealEstate.java
index e11c852..a748134 100644
--- a/src/main/java/org/sample/model/RealEstate.java
+++ b/src/main/java/org/sample/model/RealEstate.java
@@ -11,7 +11,7 @@ import javax.persistence.OneToOne;
 import org.hibernate.annotations.Type;
 
 @MappedSuperclass
-public class RealEstate {
+public abstract class RealEstate {
 
 	@Id
 	@GeneratedValue
@@ -19,7 +19,7 @@ public class RealEstate {
 	private String title;
 	@OneToOne(cascade = { CascadeType.ALL })
 	private Address address;
-	private int price; 
+	private int price;
 	private boolean fixedMoveIn;
 	@Type(type = "date")
 	private Date moveIn;
diff --git a/src/main/webapp/pages/Ad2.jsp b/src/main/webapp/pages/Ad2.jsp
index 7587bef..c8bc2ef 100644
--- a/src/main/webapp/pages/Ad2.jsp
+++ b/src/main/webapp/pages/Ad2.jsp
@@ -24,10 +24,8 @@
 	<c:if test="${ad.fixedMoveOut==false}"> There is no fixed move-out date. <br/></c:if>
 	<c:if test="${ad.fixedMoveOut==true}"> Move-out date: <fmt:formatDate pattern="dd/MM/yyyy" value="${ad.moveOut}" /><br/></c:if>
 	Price: ${ad.price} chf<br/>
-	<c:if test="${category eq 'Apartment' }">Number of rooms: ${ad.numberOfRooms} <br/>
-		Apartment size: ${ad.size}<br/></c:if>
-	<c:if test="${category eq 'Shared Apartment' }">Room size: ${ad.roomSize}<br/></c:if>
-	
+	Number of rooms: ${ad.numberOfRooms}<br/>
+	Size: ${ad.size}<br/>
 </div>
 <div>
 	Description: <br/>
diff --git a/src/main/webapp/pages/newAd.jsp b/src/main/webapp/pages/newAd.jsp
index e24108e..76d8ce2 100644
--- a/src/main/webapp/pages/newAd.jsp
+++ b/src/main/webapp/pages/newAd.jsp
@@ -15,7 +15,7 @@
 </select>
 
 
-<form:form method="post" modelAttribute="apForm" action="makeAd" id="apForm" cssClass="form-horizontal"  autocomplete="off">
+<form:form method="post" modelAttribute="apForm" action="make-ad" id="apForm" cssClass="form-horizontal"  autocomplete="off">
     <fieldset>
 		<form:hidden path="category" value="Apartment"/>
 		<form:hidden path="id" value="${oldAd.id}"/>
@@ -147,10 +147,10 @@
     </fieldset>
 </form:form>
 
-<form:form method="post" modelAttribute="shApForm" action="makeAd" id="shApForm" cssClass="form-horizontal"  autocomplete="off">
+<form:form method="post" modelAttribute="shApForm" action="make-ad" id="shApForm" cssClass="form-horizontal"  autocomplete="off">
     <fieldset>
     	<form:hidden path="category" value="Shared Apartment"/>
-		<form:hidden path="id" value="${oldAd.id}"/>
+		<%-- <form:hidden path="id" value="${oldAd.id}"/> --%>
 		
 		<legend>Title</legend>
         <c:set var="titleErrors"><form:errors path="title"/></c:set>
diff --git a/src/main/webapp/pages/viewAd.jsp b/src/main/webapp/pages/viewAd.jsp
index ce437aa..3c6bdfa 100644
--- a/src/main/webapp/pages/viewAd.jsp
+++ b/src/main/webapp/pages/viewAd.jsp
@@ -8,11 +8,11 @@
 <c:import url="template/header.jsp" />
 
 <h1>${message}</h1>
-<c:import url="Ad2.jsp" />
+<c:import url="Ad.jsp" />
 
 <form:form method="post" modelAttribute="apartmentForm" action="editAd" id="apartmentForm" cssClass="form-horizontal"  autocomplete="off">
     <fieldset>	
-		<form:hidden path="id" value="${ad.id}"/>
+		<form:hidden path="id" value="${apartmentForm.id}"/>
          <div class="form-actions">
             <button type="submit" class="btn btn-primary">Edit Ad</button>
             <a href="main" class="btn">Submit</a>
